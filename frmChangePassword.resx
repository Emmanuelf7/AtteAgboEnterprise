<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAB6JJREFUWEfF
        lmtQVOcZx016m16mJZ1+aL90OtMP7ZfMtB86E82IzohVdoFdWG7L/SpXYYFFUCMCIZqoiBJoGqMhxjTW
        e8VUMY2miUnbTDNJE5SgidZBEqlFDpzdPdfd8+/zvMviwm6mH/PhNxye93n+//979px3dxmAr5S4xbhU
        exMID3GGkAgsgWu8xj0JcTXiELe4iLDxEPHAzLsd6NwF7H8hDF9zLbonPPN/g8QtRrCqWpxEeLctHcDg
        IeDCZeDKe3GxLlyCNUA93EszPMsa8bQjxC0ywQ3NfaGqZgj2HyDxy7AuvQNcjvDuEt4R69alKyIIz0Tm
        WSueBxO3aFR6+szKJpi1rQgdPY0QmzMjbwIjfwUuRnjrwTXVed268KboD52/hOCrp4UGa7FmPK+YglbR
        6CSg17TAPHwMobMjxEVYw6/DOvcXYIE3gNcI/jtf43XuCw1fFHPBP40IDdZiTdZe6rfoH6VsY4JSvlFS
        yxtgvPAKgseGETp+DqETr0H/2/vwTd6FdfZ14NR54kIU52ERIVrjHu3df9LMOQSPD8M8dhbGgSNgTdZm
        j2jPRQH8pfVDgbJ6qF27Yb58AsEjJxF85TS0t/+BuTkZsuxD4PMpWCfJ8I/DDzhKQU/+Waxxz+ysDPWt
        v9PsKZhHTsA4fJw0d4G12SPac+FirqQ2QS6tg6+qCfpzL8E8+AeYh45CpQeLBVnY5wsgEFCgfvEfYWq9
        fArWYeLoWVHz+wPU46ew8yHeuEI6r4q7qQ0OCW32YK+YALPFNR4C/vZu6M8egjEwBPN3hyH/e0IIsjCb
        K4oKVdWg371H5icFfM01XosOId+agDH4Eum9CK3/IGl3gT3YKybATFHVGamoGkpPH/Q9z8HofR5m3wER
        wn/7jhBeMNd1GIYBc+oeTDLXdQOapos1Dsl3yk/B2dzY+zzp/R7arkEoT/aCPdgrJsB04QZphm6P2t0L
        7cl90J/qh7FzAObTgzD3HYJye1IEYCNhbgYRDIYxTXM+RPguKBTY7DsoZo0dz0Lv2Q+tey+Urj24Tx7s
        FRPgXkEl7pdvhLJlB7QnnoHesRvG9l6YnX0Idu+DueUZaJ98JnbPhsFgCJZlIRSyRAjDMMN34ZNPYTZ3
        i36zsxdGxx7oT+yCumUnlM09uE8PInvFBJjKL8dMBb0qTR3QWrqgt/bAaNsBo6odenoFjJQSGO466Ndv
        fmkAXjNya6GnFENPLoSeR/2e7dC83VCbOxHwbBObZK+YAF+4yzBdXItA9SaotZuhVbdBTS2Gtj4fmo3E
        UkvCgmzyZR/BON2hPArAc7YCqL91QyFUdy3UmnYENnjJowbsFRNgMrcEU3nlCBTRXcivQ2BNNpSkbKjr
        8qDZC6G56QGl2xv9EPKuxc6jHkJl7Aa03GqodgqwLhfKmiwEVmXAb8uHv7AeU+5ysFdMgImcYmkypxh+
        Zwn8iU4EVmdQgCwo62kH2ZXwXx1f9BqyIQfhvwvm868h9yo0o6zPpY1kwr/KCd/jqZBJczKrEOwVE+B2
        duEZAlJimmjmoUBSJgKuMsgfjy06iMSTzkE+vSnga65HzgDunfvoGs2Wwp/kgi/RAXmFHdJyG9iDvWIC
        3Moq8BC4uzaDmm3wrXKIYenDUUjS3MJRzAZsFLhBn3eDV8DX0eZ8CvKM9MEofEmkl5iKueXJpJ0O9mCv
        mAA3M/MTPnPl4ZYzF7MrksWQLykd8s4+zMzMCkEW5hPOP34DelMr9NqGMM2t8FEtcgRzL8/M0azQSEyB
        tGI9bjlywR7sFROAuZHhHiLw+Von5lbaadhJD08W5N39CyHmxsbJkHfeCKPJE6aRvr69rWJNkmapV4K8
        px9+eybkJAdp2UjTAdZmj2jPRQGup+cmjKfnSASmV6dAXkPPg82FQLob8r4BSKPXoHmayZy+rr30I6ON
        fjO0eWG0Us1D3/fNzZCuXoO8f4A+fzd8dhdppOK/q+1gTdZmj2jPRQGYMWe2k8C4IwvTSRQgOR1+Glby
        CqGWlUOrq4HR3AhzsxdmRxuC29tgbm2lEB7oG+kor6iAUlAEvysXsi0d02vThBZrsvZSv0X/RLjqyOwj
        MJaWiWkbvUJOepfd+fSjogxaPQXY1IhgxyaEntqK0M6tCHa1wWinr/FGOnAq6SzJL4AvgzZgdwoN1iI6
        43nFFCKMprk6P05zgZkg5Bw6VErphKurogANCHa2wtq9DdbeDoR62umO0B1ooAOoohQ+txsTjvAsw1rx
        PJi4xQgfpWY4/5WSLhG4mpaBO9k5kCtL6SOohbmtCaEd7bCe3kxhWihUPXzV5bhDQbmXZ3iWNeJpR4hb
        jOZDuzPhA7tziECEUacL1ynMRGmR4HpOjqhF9xBDPBtPM5oHF8uWfYP4DvEI8WPiZ8QviF8Rjz2a8Ejy
        i8tX9o+sWff2e8lpvvdtDkTDNV7jHu6lmZXzs6zBWqzJ2uzBXg8vDfA14psEN/yA+BHxE+KnxM+JXxKP
        Er8mfkM8RqyYh6+5xmvcw708w7OswVqsydrswV4PLQ3wEPHw/OLXCW78FvFt4rvE94jvEyyUQPBufjgP
        X3ON17iHe3mGZ1mDtViTtdlDmC8K8NWAZf8Di400BjiRdZIAAAAASUVORK5CYII=
</value>
  </data>
</root>